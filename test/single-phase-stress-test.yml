# Artillery test script for maximum database stress
config:
  target: "http://localhost:3000" # Cambia por la URL de tu servidor
  phases:
    - duration: 120 # 2 minutos
      arrivalRate: 10000 # Comienza con 10,000 usuarios por segundo
      rampTo: 50000 # Incrementa hasta 50,000 usuarios por segundo
      name: "Max Database Stress Test"
  payload:
    path: "users.csv" # Archivo CSV con datos para las operaciones
    fields:
      - "username"
      - "email"
      - "password"
      - "tenantId"

scenarios:
  - name: "Database Stress Operations"
    flow:
      - log: "Inserting a user for tenant {{ tenantId }}"
      - post:
          url: "/userprofile"
          json:
            username: "{{ username }}"
            email: "{{ email }}"
            password: "{{ password }}"
            tenantId: "{{ tenantId }}"
          expect:
            - statusCode: 201

      - log: "Fetching all users for tenant {{ tenantId }}"
      - get:
          url: "/userprofile"
          headers:
            Authorization: "Bearer YOUR_TEST_TOKEN" # Reemplaza con un token válido
          expect:
            - statusCode: 200

      - log: "Updating a user for tenant {{ tenantId }}"
      - put:
          url: "/userprofile/1" # Actualiza con un ID válido
          json:
            username: "Updated_{{ username }}"
            email: "{{ email }}"
            password: "{{ password }}"
          headers:
            Authorization: "Bearer YOUR_TEST_TOKEN" # Reemplaza con un token válido
          expect:
            - statusCode: 200
